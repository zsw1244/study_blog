(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{428:function(s,n,t){"use strict";t.r(n);var v=t(22),r=Object(v.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"js高级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js高级"}},[s._v("#")]),s._v(" "),t("strong",[s._v("JS高级")])]),s._v(" "),t("h2",{attrs:{id:"数据类型的分类和判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型的分类和判断"}},[s._v("#")]),s._v(" "),t("strong",[s._v("数据类型的分类和判断")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("基本(值)类型")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Number ----- 任意数值 -------- typeof")])]),s._v(" "),t("li",[t("strong",[s._v("String ----- 任意字符串 ------ typeof")])]),s._v(" "),t("li",[t("strong",[s._v("Boolean ---- true/false ----- typeof")])]),s._v(" "),t("li",[t("strong",[s._v("undefined --- undefined ----- typeof/===")])]),s._v(" "),t("li",[t("strong",[s._v("null -------- null ---------- ===")])])])]),s._v(" "),t("li",[t("strong",[s._v("对象(引用)类型")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Object ----- typeof/instanceof")])]),s._v(" "),t("li",[t("strong",[s._v("Array ------ instanceof")])]),s._v(" "),t("li",[t("strong",[s._v("Function ---- typeof")])])])])]),s._v(" "),t("h2",{attrs:{id:"数据-变量-内存的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据-变量-内存的理解"}},[s._v("#")]),s._v(" "),t("strong",[s._v("数据,变量, 内存的理解")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("什么是数据?")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("在内存中可读的, 可传递的保存了特定信息的'东东'")])]),s._v(" "),t("li",[t("strong",[s._v("一切皆数据, 函数也是数据")])]),s._v(" "),t("li",[t("strong",[s._v("在内存中的所有操作的目标: 数据")])])])]),s._v(" "),t("li",[t("strong",[s._v("什么是变量?")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("在程序运行过程中它的值是允许改变的量")])]),s._v(" "),t("li",[t("strong",[s._v("一个变量对应一块小内存, 它的值保存在此内存中")])])])]),s._v(" "),t("li",[t("strong",[s._v("什么是内存?")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("内存条通电后产生的存储空间(临时的)")])]),s._v(" "),t("li",[t("strong",[s._v("一块内存包含2个方面的数据")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("内部存储的数据")])]),s._v(" "),t("li",[t("strong",[s._v("地址值数据")])])])]),s._v(" "),t("li",[t("strong",[s._v("内存空间的分类")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("栈空间: 全局变量和局部变量")])]),s._v(" "),t("li",[t("strong",[s._v("堆空间: 对象")])])])])])]),s._v(" "),t("li",[t("strong",[s._v("内存,数据, 变量三者之间的关系")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("内存是容器, 用来存储不同数据")])]),s._v(" "),t("li",[t("strong",[s._v("变量是内存的标识, 通过变量我们可以操作(读/写)内存中的数据")])])])])]),s._v(" "),t("h2",{attrs:{id:"对象的理解和使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象的理解和使用"}},[s._v("#")]),s._v(" "),t("strong",[s._v("对象的理解和使用")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("什么是对象?")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("多个数据(属性)的集合")])]),s._v(" "),t("li",[t("strong",[s._v("用来保存多个数据(属性)的容器")])])])]),s._v(" "),t("li",[t("strong",[s._v("属性组成:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("属性名 : 字符串(标识)")])]),s._v(" "),t("li",[t("strong",[s._v("属性值 : 任意类型")])])])]),s._v(" "),t("li",[t("strong",[s._v("属性的分类:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("一般 : 属性值不是function  描述对象的状态")])]),s._v(" "),t("li",[t("strong",[s._v("方法 : 属性值为function的属性  描述对象的行为")])])])]),s._v(" "),t("li",[t("strong",[s._v("特别的对象")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("数组: 属性名是0,1,2,3之类的索引")])]),s._v(" "),t("li",[t("strong",[s._v("函数: 可以执行的")])])])]),s._v(" "),t("li",[t("strong",[s._v("如何操作内部属性(方法)")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v(".属性名")]),s._v("**---")])])])]),s._v(" "),t("h2",{attrs:{id:"函数的理解和使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数的理解和使用"}},[s._v("#")]),s._v(" "),t("strong",[s._v("函数的理解和使用")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("什么是函数?")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("用来实现特定功能的, n条语句的封装体")])]),s._v(" "),t("li",[t("strong",[s._v("只有函数类型的数据是可以执行的, 其它的都不可以")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("为什么要用函数?")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("提高复用性")])]),s._v(" "),t("li",[t("strong",[s._v("便于阅读交流")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("函数也是对象")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("instanceof Object===true")])]),s._v(" "),t("li",[t("strong",[s._v("函数有属性: prototype")])]),s._v(" "),t("li",[t("strong",[s._v("函数有方法: call()/apply()")])]),s._v(" "),t("li",[t("strong",[s._v("可以添加新的属性/方法")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("函数的3种不同角色")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("一般函数 : 直接调用")])]),s._v(" "),t("li",[t("strong",[s._v("构造函数 : 通过new调用")])]),s._v(" "),t("li",[t("strong",[s._v("对象 : 通过.调用内部的属性/方法")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("函数中的this")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("显式指定谁: obj.xxx()")])]),s._v(" "),t("li",[t("strong",[s._v("通过call/apply指定谁调用: xxx.call(obj)")])]),s._v(" "),t("li",[t("strong",[s._v("不指定谁调用: xxx()  : window")])]),s._v(" "),t("li",[t("strong",[s._v("回调函数: 看背后是通过谁来调用的: window/其它")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("匿名函数自调用:")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("(function(w, obj){\n  //实现代码\n})(window, obj)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("strong",[s._v("专业术语为: IIFE (Immediately Invoked Function Expression) 立即调用函数表达式")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("回调函数的理解")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("什么函数才是回调函数?")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("你定义的")])]),s._v(" "),t("li",[t("strong",[s._v("你没有调用")])]),s._v(" "),t("li",[t("strong",[s._v("但它最终执行了(在一定条件下或某个时刻)")])])])]),s._v(" "),t("li",[t("strong",[s._v("常用的回调函数")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("dom事件回调函数")])]),s._v(" "),t("li",[t("strong",[s._v("定时器回调函数")])]),s._v(" "),t("li",[t("strong",[s._v("ajax请求回调函数(后面讲解)")])]),s._v(" "),t("li",[t("strong",[s._v("生命周期回调函数(后面讲解)")])])])])])])]),s._v(" "),t("h2",{attrs:{id:"原型与原型链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[s._v("#")]),s._v(" "),t("strong",[s._v("原型与原型链")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("所有函数都有一个特别的属性:")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("prototype")]),s._v("** : 显式原型属性**")])])]),s._v(" "),t("li",[t("strong",[s._v("所有实例对象都有一个特别的属性:")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("__proto__")]),s._v("** : 隐式原型属性**")])])]),s._v(" "),t("li",[t("strong",[s._v("显式原型与隐式原型的关系")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("函数的prototype: 定义函数时被自动赋值, 值默认为{}, 即用为原型对象")])]),s._v(" "),t("li",[t("strong",[s._v("实例对象的")]),s._v("**"),t("strong",[s._v("proto******: 在创建实例对象时被自动添加, 并赋值为构造函数的prototype值")])]),s._v(" "),t("li",[t("strong",[s._v("原型对象即为当前实例对象的父对象")])])])]),s._v(" "),t("li",[t("strong",[s._v("原型链")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("所有的实例对象都有")]),s._v("****proto****"),t("strong",[s._v("属性, 它指向的就是原型对象")])]),s._v(" "),t("li",[t("strong",[s._v("这样通过")]),s._v("****proto****"),t("strong",[s._v("属性就形成了一个链的结构----\x3e原型链")])]),s._v(" "),t("li",[t("strong",[s._v("当查找对象内部的属性/方法时, js引擎自动沿着这个原型链查找")])]),s._v(" "),t("li",[t("strong",[s._v("当给对象属性赋值时不会使用原型链, 而只是在当前对象中进行操作")])])])])]),s._v(" "),t("h2",{attrs:{id:"执行上下文与执行上下文栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文与执行上下文栈"}},[s._v("#")]),s._v(" "),t("strong",[s._v("执行上下文与执行上下文栈")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("变量提升与函数提升")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("变量提升: 在变量定义语句之前, 就可以访问到这个变量(undefined)")])]),s._v(" "),t("li",[t("strong",[s._v("函数提升: 在函数定义语句之前, 就执行该函数")])]),s._v(" "),t("li",[t("strong",[s._v("先有变量提升, 再有函数提升")])])])]),s._v(" "),t("li",[t("strong",[s._v("理解")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("执行上下文: 由js引擎自动创建的对象, 包含对应作用域中的所有变量属性")])]),s._v(" "),t("li",[t("strong",[s._v("执行上下文栈: 用来管理产生的多个执行上下文")])])])]),s._v(" "),t("li",[t("strong",[s._v("分类:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("全局: window")])]),s._v(" "),t("li",[t("strong",[s._v("函数: 对程序员来说是透明的")])])])]),s._v(" "),t("li",[t("strong",[s._v("生命周期")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("全局 : 准备执行全局代码前产生, 当页面刷新/关闭页面时死亡")])]),s._v(" "),t("li",[t("strong",[s._v("函数 : 调用函数时产生, 函数执行完时死亡")])])])]),s._v(" "),t("li",[t("strong",[s._v("包含哪些属性:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("全局 :")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("用var定义的全局变量  ==>undefined")])]),s._v(" "),t("li",[t("strong",[s._v("使用function声明的函数   ===>function")])]),s._v(" "),t("li",[t("strong",[s._v("this   ===>window")])])])]),s._v(" "),t("li",[t("strong",[s._v("函数")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("用var定义的局部变量  ==>undefined")])]),s._v(" "),t("li",[t("strong",[s._v("使用function声明的函数   ===>function")])]),s._v(" "),t("li",[t("strong",[s._v("this   ===> 调用函数的对象, 如果没有指定就是window")])]),s._v(" "),t("li",[t("strong",[s._v("形参变量   ===>对应实参值")])]),s._v(" "),t("li",[t("strong",[s._v("arguments ===>实参列表的伪数组")])])])])])]),s._v(" "),t("li",[t("strong",[s._v("执行上下文创建和初始化的过程")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("全局:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("在全局代码执行前最先创建一个全局执行上下文(window)")])]),s._v(" "),t("li",[t("strong",[s._v("收集一些全局变量, 并初始化")])]),s._v(" "),t("li",[t("strong",[s._v("将这些变量设置为window的属性")])])])]),s._v(" "),t("li",[t("strong",[s._v("函数:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("在调用函数时, 在执行函数体之前先创建一个函数执行上下文")])]),s._v(" "),t("li",[t("strong",[s._v("收集一些局部变量, 并初始化")])]),s._v(" "),t("li",[t("strong",[s._v("将这些变量设置为执行上下文的属性")])])])])])])]),s._v(" "),t("h2",{attrs:{id:"作用域与作用域链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域与作用域链"}},[s._v("#")]),s._v(" "),t("strong",[s._v("作用域与作用域链")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("理解:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("作用域: 一块代码区域, 在编码时就确定了, 不会再变化")])]),s._v(" "),t("li",[t("strong",[s._v("作用域链: 多个嵌套的作用域形成的由内向外的结构, 用于查找变量")])])])]),s._v(" "),t("li",[t("strong",[s._v("分类:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("全局")])]),s._v(" "),t("li",[t("strong",[s._v("函数")])]),s._v(" "),t("li",[t("strong",[s._v("js没有块作用域(在ES6之前)")])])])]),s._v(" "),t("li",[t("strong",[s._v("作用")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("作用域: 隔离变量, 可以在不同作用域定义同名的变量不冲突")])]),s._v(" "),t("li",[t("strong",[s._v("作用域链: 查找变量")])])])]),s._v(" "),t("li",[t("strong",[s._v("区别作用域与执行上下文")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("作用域: 静态的, 编码时就确定了(不是在运行时), 一旦确定就不会变化了")])]),s._v(" "),t("li",[t("strong",[s._v("执行上下文: 动态的, 执行代码时动态创建, 当执行结束消失")])]),s._v(" "),t("li",[t("strong",[s._v("联系: 执行上下文环境是在对应的作用域中的")])])])])]),s._v(" "),t("h2",{attrs:{id:"闭包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[s._v("#")]),s._v(" "),t("strong",[s._v("闭包")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("理解:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("当嵌套的内部函数引用了外部函数的变量时就产生了闭包")])]),s._v(" "),t("li",[t("strong",[s._v("通过chrome工具得知: 闭包本质是内部函数中的一个对象, 这个对象中包含引用的变量属性")])])])]),s._v(" "),t("li",[t("strong",[s._v("作用:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("延长局部变量的生命周期")])]),s._v(" "),t("li",[t("strong",[s._v("让函数外部能操作内部的局部变量")])])])]),s._v(" "),t("li",[t("strong",[s._v("写一个闭包程序")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function fn1() {\n  var a = 2;\n  function fn2() {\n    a++;\n    console.log(a);\n  }\n  return fn2;\n}\nvar f = fn1();\nf();\nf();\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])])]),s._v(" "),t("li",[t("strong",[s._v("闭包应用:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("模块化: 封装一些数据以及操作数据的函数, 向外暴露一些行为")])]),s._v(" "),t("li",[t("strong",[s._v("循环遍历加监听")])]),s._v(" "),t("li",[t("strong",[s._v("JS框架(jQuery)大量使用了闭包")])])])]),s._v(" "),t("li",[t("strong",[s._v("缺点:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("变量占用内存的时间可能会过长")])]),s._v(" "),t("li",[t("strong",[s._v("可能导致内存泄露")])]),s._v(" "),t("li",[t("strong",[s._v("解决:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("及时释放 : f = null; //让内部函数对象成为垃圾对象")])])])])])])]),s._v(" "),t("h2",{attrs:{id:"内存溢出与内存泄露"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存溢出与内存泄露"}},[s._v("#")]),s._v(" "),t("strong",[s._v("内存溢出与内存泄露")])]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("内存溢出")])])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("一种程序运行出现的错误")])]),s._v(" "),t("li",[t("strong",[s._v("当程序运行需要的内存超过了剩余的内存时, 就出抛出内存溢出的错误")])])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[s._v("内存泄露")])])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("占用的内存没有及时释放")])]),s._v(" "),t("li",[t("strong",[s._v("内存泄露积累多了就容易导致内存溢出")])]),s._v(" "),t("li",[t("strong",[s._v("常见的内存泄露:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("意外的全局变量")])]),s._v(" "),t("li",[t("strong",[s._v("没有及时清理的计时器或回调函数")])]),s._v(" "),t("li",[t("strong",[s._v("闭包")])])])])]),s._v(" "),t("h2",{attrs:{id:"对象的创建模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象的创建模式"}},[s._v("#")]),s._v(" "),t("strong",[s._v("对象的创建模式")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Object构造函数模式")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var obj = {};\nobj.name = 'Tom'\nobj.setName = function(name){this.name=name}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[t("strong",[s._v("对象字面量模式")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var obj = {\n  name : 'Tom',\n  setName : function(name){this.name = name}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[t("strong",[s._v("构造函数模式")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Person(name, age) {\n  this.name = name;\n  this.age = age;\n  this.setName = function(name){this.name=name;};\n}\nnew Person('tom', 12);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("strong",[s._v("构造函数+原型的组合模式")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Person(name, age) {\n  this.name = name;\n  this.age = age;\n}\nPerson.prototype.setName = function(name){this.name=name;};\nnew Person('tom', 12);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"继承模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承模式"}},[s._v("#")]),s._v(" "),t("strong",[s._v("继承模式")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("原型链继承 : 得到方法")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Parent(){}\nParent.prototype.test = function(){};\nfunction Child(){}\nChild.prototype = new Parent(); // 子类型的原型指向父类型实例\nChild.prototype.constructor = Child\nvar child = new Child(); //有test()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("strong",[s._v("借用构造函数 : 得到属性")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Parent(xxx){this.xxx = xxx}\nParent.prototype.test = function(){};\nfunction Child(xxx,yyy){\n    Parent.call(this, xxx);//借用构造函数   this.Parent(xxx)\n}\nvar child = new Child('a', 'b');  //child.xxx为'a', 但child没有test()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("strong",[s._v("组合")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Parent(xxx){this.xxx = xxx}\nParent.prototype.test = function(){};\nfunction Child(xxx,yyy){\n    Parent.call(this, xxx);//借用构造函数   this.Parent(xxx)\n}\nChild.prototype = new Parent(); //得到test()\nvar child = new Child(); //child.xxx为'a', 也有test()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])]),s._v(" "),t("li",[t("strong",[s._v("new一个对象背后做了些什么?")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("创建一个空对象")])]),s._v(" "),t("li",[t("strong",[s._v("给对象设置")]),s._v("**"),t("strong",[s._v("proto******, 值为构造函数对象的prototype属性值   this."),t("strong",[t("strong",[t("strong",[s._v("proto")])])]),s._v(" = Fn.prototype")])]),s._v(" "),t("li",[t("strong",[s._v("执行构造函数体(给对象添加属性/方法)")])])])])]),s._v(" "),t("h2",{attrs:{id:"线程与进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程与进程"}},[s._v("#")]),s._v(" "),t("strong",[s._v("线程与进程")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("进程:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("程序的一次执行, 它占有一片独有的内存空间")])]),s._v(" "),t("li",[t("strong",[s._v("可以通过windows任务管理器查看进程")])])])]),s._v(" "),t("li",[t("strong",[s._v("线程:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("是进程内的一个独立执行单元")])]),s._v(" "),t("li",[t("strong",[s._v("是程序执行的一个完整流程")])]),s._v(" "),t("li",[t("strong",[s._v("是CPU的最小的调度单元")])])])]),s._v(" "),t("li",[t("strong",[s._v("关系")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("一个进程至少有一个线程(主)")])]),s._v(" "),t("li",[t("strong",[s._v("程序是在某个进程中的某个线程执行的")])])])])]),s._v(" "),t("h2",{attrs:{id:"浏览器内核模块组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核模块组成"}},[s._v("#")]),s._v(" "),t("strong",[s._v("浏览器内核模块组成")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("主线程")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("js引擎模块 : 负责js程序的编译与运行")])]),s._v(" "),t("li",[t("strong",[s._v("html,css文档解析模块 : 负责页面文本的解析")])]),s._v(" "),t("li",[t("strong",[s._v("DOM/CSS模块 : 负责dom/css在内存中的相关处理")])]),s._v(" "),t("li",[t("strong",[s._v("布局和渲染模块 : 负责页面的布局和效果的绘制(内存中的对象)")])])])]),s._v(" "),t("li",[t("strong",[s._v("分线程")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("定时器模块 : 负责定时器的管理")])]),s._v(" "),t("li",[t("strong",[s._v("DOM事件模块 : 负责事件的管理")])]),s._v(" "),t("li",[t("strong",[s._v("网络请求模块 : 负责Ajax请求")])])])])]),s._v(" "),t("h2",{attrs:{id:"js线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js线程"}},[s._v("#")]),s._v(" "),t("strong",[s._v("js线程")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("js是单线程执行的(回调函数也是在主线程)")])]),s._v(" "),t("li",[t("strong",[s._v("H5提出了实现多线程的方案: Web Workers")])]),s._v(" "),t("li",[t("strong",[s._v("只能是主线程更新界面")])])]),s._v(" "),t("h2",{attrs:{id:"定时器问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定时器问题"}},[s._v("#")]),s._v(" "),t("strong",[s._v("定时器问题:")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("定时器并不真正完全定时")])]),s._v(" "),t("li",[t("strong",[s._v("如果在主线程执行了一个长时间的操作, 可能导致延时才处理")])])]),s._v(" "),t("h2",{attrs:{id:"事件处理机制-图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件处理机制-图"}},[s._v("#")]),s._v(" "),t("strong",[s._v("事件处理机制(图)")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("代码分类")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始化执行代码: 包含绑定dom事件监听, 设置定时器, 发送ajax请求的代码")])]),s._v(" "),t("li",[t("strong",[s._v("回调执行代码: 处理回调逻辑")])])])]),s._v(" "),t("li",[t("strong",[s._v("js引擎执行代码的基本流程:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始化代码===>回调代码")])])])]),s._v(" "),t("li",[t("strong",[s._v("模型的2个重要组成部分:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("事件管理模块")])]),s._v(" "),t("li",[t("strong",[s._v("回调队列")])])])]),s._v(" "),t("li",[t("strong",[s._v("模型的运转流程")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("执行初始化代码, 将事件回调函数交给对应模块管理")])]),s._v(" "),t("li",[t("strong",[s._v("当事件发生时, 管理模块会将回调函数及其数据添加到回调列队中")])]),s._v(" "),t("li",[t("strong",[s._v("只有当初始化代码执行完后(可能要一定时间), 才会遍历读取回调队列中的回调函数执行")])])])])]),s._v(" "),t("h2",{attrs:{id:"h5-web-workers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#h5-web-workers"}},[s._v("#")]),s._v(" "),t("strong",[s._v("H5 Web Workers")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("可以让js在分线程执行")])]),s._v(" "),t("li",[t("strong",[s._v("Worker")]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var worker = new Worker('worker.js');\nworker.onMessage = function(event){event.data} : 用来接收另一个线程发送过来的数据的回调\nworker.postMessage(data1) : 向另一个线程发送数据\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[t("strong",[s._v("问题:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("worker内代码不能操作DOM更新UI")])]),s._v(" "),t("li",[t("strong",[s._v("不是每个浏览器都支持这个新特性")])]),s._v(" "),t("li",[t("strong",[s._v("不能跨域加载JS")])])])]),s._v(" "),t("li",[t("strong",[s._v("svn版本控制")])]),s._v(" "),t("li",[t("strong",[s._v("svn server")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);