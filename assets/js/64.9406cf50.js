(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{481:function(s,e,n){"use strict";n.r(e);var a=n(22),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"express"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#express"}},[s._v("#")]),s._v(" "),n("strong",[s._v("Express")])]),s._v(" "),n("p",[n("strong",[s._v("基于 Node.js 平台，快速、开放、极简的 web 开发框架。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ npm install express --save\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"一、特色"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、特色"}},[s._v("#")]),s._v(" "),n("strong",[s._v("一、特色")])]),s._v(" "),n("h4",{attrs:{id:"_1、web-应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、web-应用"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1、Web 应用")])]),s._v(" "),n("p",[n("strong",[s._v("Express 是一个基于 Node.js 平台的极简、灵活的 web 应用开发框架，它提供一系列强大的特性，帮助你创建各种 Web 和移动设备应用。")])]),s._v(" "),n("h4",{attrs:{id:"_2、api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、api"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2、API")])]),s._v(" "),n("p",[n("strong",[s._v("丰富的 HTTP 快捷方法和任意排列组合的 Connect 中间件，让你创建健壮、友好的 API 变得既快速又简单。")])]),s._v(" "),n("h4",{attrs:{id:"_3、性能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、性能"}},[s._v("#")]),s._v(" "),n("strong",[s._v("3、性能")])]),s._v(" "),n("p",[n("strong",[s._v("Express 不对 Node.js 已有的特性进行二次抽象，我们只是在它之上扩展了 Web 应用所需的基本功能。")])]),s._v(" "),n("h3",{attrs:{id:"二、安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、安装"}},[s._v("#")]),s._v(" "),n("strong",[s._v("二、安装")])]),s._v(" "),n("p",[n("strong",[s._v("首先假定你已经安装了 Node.js，接下来为你的应用创建一个目录，然后进入此目录并将其作为当前工作目录。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ mkdir myapp\n$ cd myapp\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("通过 npm init 命令为你的应用创建一个 package.json 文件。 欲了解 package.json 是如何起作用的，请参考 Specifics of npm’s package.json handling。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ npm init\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("此命令将要求你输入几个参数，例如此应用的名称和版本。 你可以直接按“回车”键接受默认设置即可，下面这个除外：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("entry point: (index.js)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("键入 app.js 或者你所希望的名称，这是当前应用的入口文件。如果你希望采用默认的 index.js 文件名，只需按“回车”键即可。")])]),s._v(" "),n("p",[n("strong",[s._v("接下来安装 Express 并将其保存到依赖列表中：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ npm install express --save\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("如果只是临时安装 Express，不想将它添加到依赖列表中，只需略去 --save 参数即可：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ npm install express\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[n("strong",[s._v("安装 Node 模块时，如果指定了 --save 参数，那么此模块将被添加到 package.json 文件中 dependencies 依赖列表中。 然后通过 npm install 命令即可自动安装依赖列表中所列出的所有模块。")])])]),s._v(" "),n("h3",{attrs:{id:"三、hello-world-实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、hello-world-实例"}},[s._v("#")]),s._v(" "),n("strong",[s._v("三、Hello world 实例")])]),s._v(" "),n("p",[n("strong",[s._v("接下来，我们一起创建一个基本的 Express 应用。")])]),s._v(" "),n("p",[n("strong",[s._v("注意：这里所创建是一个最最简单的 Express 应用，并且仅仅只有一个文件 — 和通过 Express 应用生成器 所创建的应用")]),n("em",[n("strong",[s._v("完全不一样")])]),s._v("**，Express 应用生成器所创建的应用框架包含多 JavaScript 文件、Jade 模板和针对不同用途的子目录。**")]),s._v(" "),n("p",[n("strong",[s._v("进入 myapp 目录，创建一个名为 app.js 的文件，然后将下列代码复制进去：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\nvar server = app.listen(3000, function () {\n  var host = server.address().address;\n  var port = server.address().port;\n\n  console.log('Example app listening at http://%s:%s', host, port);\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[n("strong",[s._v("上面的代码启动一个服务并监听从 3000 端口进入的所有连接请求。他将对所有 (/) URL 或 路由 返回 “Hello World!” 字符串。对于其他所有路径全部返回 404 Not Found。")])]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("req (请求) 和 res (响应) 与 Node 提供的对象完全一致，因此，你可以调用 req.pipe()、req.on('data', callback) 以及任何 Node 提供的方法。")])])]),s._v(" "),n("p",[n("strong",[s._v("通过如下命令启动此应用：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ node app.js\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("然后在浏览器中打开 "),n("strong",[n("a",{attrs:{href:"http://localhost:3000/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://localhost:3000/"),n("OutboundLink")],1)]),s._v(" 并查看输出结果。")])]),s._v(" "),n("h3",{attrs:{id:"四、路由"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、路由"}},[s._v("#")]),s._v(" "),n("strong",[s._v("四、路由")])]),s._v(" "),n("p",[n("strong",[s._v("路由是指如何定义应用的端点（URIs）以及如何响应客户端的请求。")])]),s._v(" "),n("p",[n("strong",[s._v("路由是由一个 URI、HTTP 请求（GET、POST等）和若干个句柄组成，它的结构如下： app.METHOD(path, [callback...], callback)， app 是 express 对象的一个实例， METHOD 是一个 HTTP 请求方法， path 是服务器上的路径， callback 是当路由匹配时要执行的函数。")])]),s._v(" "),n("p",[n("strong",[s._v("下面是一个基本的路由示例：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var express = require('express');\nvar app = express();\n\n// respond with \"hello world\" when a GET request is made to the homepage\napp.get('/', function(req, res) {\n  res.send('hello world');\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h4",{attrs:{id:"_1、路由方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、路由方法"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1、路由方法")])]),s._v(" "),n("p",[n("strong",[s._v("路由方法源于 HTTP 请求方法，和 express 实例相关联。")])]),s._v(" "),n("p",[n("strong",[s._v("下面这个例子展示了为应用跟路径定义的 GET 和 POST 请求：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// GET method route\n// 对网站首页的访问返回 \"Hello World!\" 字样\napp.get('/', function (req, res) {\n  res.send('Hello World!')\n})\n\n// 网站首页接受 POST 请求\napp.post('/', function (req, res) {\n  res.send('Got a POST request')\n})\n\n// /user 节点接受 PUT 请求\napp.put('/user', function (req, res) {\n  res.send('Got a PUT request at /user')\n})\n\n// /user 节点接受 DELETE 请求\napp.delete('/user', function (req, res) {\n  res.send('Got a DELETE request at /user')\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[n("strong",[s._v("Express 定义了如下和 HTTP 请求对应的路由方法： get, post, put, head, delete, options, trace, copy, lock, mkcol, move, purge, propfind, proppatch, unlock, report, mkactivity, checkout, merge, m-search, notify, subscribe, unsubscribe, patch, search, 和 connect。")])]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("有些路由方法名不是合规的 JavaScript 变量名，此时使用括号记法，比如： app['m-search']('/', function ...")])])]),s._v(" "),n("p",[n("strong",[s._v("app.all() 是一个特殊的路由方法，没有任何 HTTP 方法与其对应，它的作用是对于一个路径上的所有请求加载中间件。")])]),s._v(" "),n("p",[n("strong",[s._v("在下面的例子中，来自 “/secret” 的请求，不管使用 GET、POST、PUT、DELETE 或其他任何 http 模块支持的 HTTP 请求，句柄都会得到执行。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.all('/secret', function (req, res, next) {\n  console.log('Accessing the secret section ...')\n  next(); // pass control to the next handler\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h4",{attrs:{id:"_2、路由路径"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、路由路径"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2、路由路径")])]),s._v(" "),n("p",[n("strong",[s._v("路由路径和请求方法一起定义了请求的端点，它可以是字符串、字符串模式或者正则表达式。")])]),s._v(" "),n("p",[n("strong",[s._v("Express 使用 path-to-regexp 匹配路由路径，请参考文档查阅所有定义路由路径的方法。 Express Route Tester 是测试基本 Express 路径的好工具，但不支持模式匹配。")])]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("查询字符串不是路由路径的一部分。")])])]),s._v(" "),n("p",[n("strong",[s._v("使用字符串的路由路径示例：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 匹配根路径的请求\napp.get('/', function (req, res) {\n  res.send('root');\n});\n\n// 匹配 /about 路径的请求\napp.get('/about', function (req, res) {\n  res.send('about');\n});\n\n// 匹配 /random.text 路径的请求\napp.get('/random.text', function (req, res) {\n  res.send('random.text');\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[n("strong",[s._v("使用字符串模式的路由路径示例：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 匹配 acd 和 abcd\napp.get('/ab?cd', function(req, res) {\n  res.send('ab?cd');\n});\n\n// 匹配 abcd、abbcd、abbbcd等\napp.get('/ab+cd', function(req, res) {\n  res.send('ab+cd');\n});\n\n// 匹配 abcd、abxcd、abRABDOMcd、ab123cd等\napp.get('/ab*cd', function(req, res) {\n  res.send('ab*cd');\n});\n\n// 匹配 /abe 和 /abcde\napp.get('/ab(cd)?e', function(req, res) {\n res.send('ab(cd)?e');\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("blockquote",[n("p",[n("em",[n("em",[s._v("字符 ?、+、")]),s._v(" 和 () 是正则表达式的子集，- 和 . 在基于字符串的路径中按照字面值解释。")]),s._v("*")])]),s._v(" "),n("p",[n("strong",[s._v("使用正则表达式的路由路径示例：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 匹配任何路径中含有 a 的路径：\napp.get(/a/, function(req, res) {\n  res.send('/a/');\n});\n\n// 匹配 butterfly、dragonfly，不匹配 butterflyman、dragonfly man等\napp.get(/.*fly$/, function(req, res) {\n  res.send('/.*fly$/');\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h4",{attrs:{id:"_3、路由句柄"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、路由句柄"}},[s._v("#")]),s._v(" "),n("strong",[s._v("3、路由句柄")])]),s._v(" "),n("p",[n("strong",[s._v("可以为请求处理提供多个回调函数，其行为类似 中间件。唯一的区别是这些回调函数有可能调用 next('route') 方法而略过其他路由回调函数。可以利用该机制为路由定义前提条件，如果在现有路径上继续执行没有意义，则可将控制权交给剩下的路径。")])]),s._v(" "),n("p",[n("strong",[s._v("路由句柄有多种形式，可以是一个函数、一个函数数组，或者是两者混合，如下所示.")])]),s._v(" "),n("p",[n("strong",[s._v("使用一个回调函数处理路由：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.get('/example/a', function (req, res) {\n  res.send('Hello from A!');\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("使用多个回调函数处理路由（记得指定 next 对象）：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.get('/example/b', function (req, res, next) {\n  console.log('response will be sent by the next function ...');\n  next();\n}, function (req, res) {\n  res.send('Hello from B!');\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("strong",[s._v("使用回调函数数组处理路由：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var cb0 = function (req, res, next) {\n  console.log('CB0')\n  next()\n}\n\nvar cb1 = function (req, res, next) {\n  console.log('CB1')\n  next()\n}\n\nvar cb2 = function (req, res) {\n  res.send('Hello from C!')\n}\n\napp.get('/example/c', [cb0, cb1, cb2])\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[n("strong",[s._v("混合使用函数和函数数组处理路由：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var cb0 = function (req, res, next) {\n  console.log('CB0')\n  next()\n}\n\nvar cb1 = function (req, res, next) {\n  console.log('CB1')\n  next()\n}\n\napp.get('/example/d', [cb0, cb1], function (req, res, next) {\n  console.log('response will be sent by the next function ...')\n  next()\n}, function (req, res) {\n  res.send('Hello from D!')\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h4",{attrs:{id:"_4、响应方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、响应方法"}},[s._v("#")]),s._v(" "),n("strong",[s._v("4、响应方法")])]),s._v(" "),n("p",[n("strong",[s._v("下表中响应对象（res）的方法向客户端返回响应，终结请求响应的循环。如果在路由句柄中一个方法也不调用，来自客户端的请求会一直挂起。")])]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[s._v("方法")])]),s._v(" "),n("th",[n("strong",[s._v("描述")])])])]),s._v(" "),n("tbody",[n("tr",[n("td",[n("strong",[s._v("res.download()")])]),s._v(" "),n("td",[n("strong",[s._v("提示下载文件。")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("res.end()")])]),s._v(" "),n("td",[n("strong",[s._v("终结响应处理流程。")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("res.json()")])]),s._v(" "),n("td",[n("strong",[s._v("发送一个 JSON 格式的响应。")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("res.jsonp()")])]),s._v(" "),n("td",[n("strong",[s._v("发送一个支持 JSONP 的 JSON 格式的响应。")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("res.redirect()")])]),s._v(" "),n("td",[n("strong",[s._v("重定向请求。")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("res.render()")])]),s._v(" "),n("td",[n("strong",[s._v("渲染视图模板。")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("res.send()")])]),s._v(" "),n("td",[n("strong",[s._v("发送各种类型的响应。")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("res.sendFile")])]),s._v(" "),n("td",[n("strong",[s._v("以八位字节流的形式发送文件。")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("res.sendStatus()")])]),s._v(" "),n("td",[n("strong",[s._v("设置响应状态代码，并将其以字符串形式作为响应体的一部分发送。")])])])])]),s._v(" "),n("h4",{attrs:{id:"_5、app-route"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、app-route"}},[s._v("#")]),s._v(" "),n("strong",[s._v("5、app.route()")])]),s._v(" "),n("p",[n("strong",[s._v("可使用 app.route() 创建路由路径的链式路由句柄。由于路径在一个地方指定，这样做有助于创建模块化的路由，而且减少了代码冗余和拼写错误。")])]),s._v(" "),n("p",[n("strong",[s._v("下面这个示例程序使用 app.route() 定义了链式路由句柄。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.route('/book')\n  .get(function(req, res) {\n    res.send('Get a random book');\n  })\n  .post(function(req, res) {\n    res.send('Add a book');\n  })\n  .put(function(req, res) {\n    res.send('Update the book');\n  });\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h4",{attrs:{id:"_6、express-router"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、express-router"}},[s._v("#")]),s._v(" "),n("strong",[s._v("6、express.Router")])]),s._v(" "),n("p",[n("strong",[s._v("可使用 express.Router 类创建模块化、可挂载的路由句柄。Router 实例是一个完整的中间件和路由系统，因此常称其为一个 “mini-app”。")])]),s._v(" "),n("p",[n("strong",[s._v("下面的实例程序创建了一个路由模块，并加载了一个中间件，定义了一些路由，并且将它们挂载至应用的路径上。")])]),s._v(" "),n("p",[n("strong",[s._v("在 app 目录下创建名为 birds.js 的文件，内容如下：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var express = require('express');\nvar router = express.Router();\n\n// 该路由使用的中间件\nrouter.use(function timeLog(req, res, next) {\n  console.log('Time: ', Date.now());\n  next();\n});\n// 定义网站主页的路由\nrouter.get('/', function(req, res) {\n  res.send('Birds home page');\n});\n// 定义 about 页面的路由\nrouter.get('/about', function(req, res) {\n  res.send('About birds');\n});\n\nmodule.exports = router;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[n("strong",[s._v("然后在应用中加载路由模块：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var birds = require('./birds')\n...\napp.use('/birds', birds)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("应用即可处理发自 /birds 和 /birds/about 的请求，并且调用为该路由指定的 timeLog 中间件。")])]),s._v(" "),n("h3",{attrs:{id:"五、利用-express-托管静态文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、利用-express-托管静态文件"}},[s._v("#")]),s._v(" "),n("strong",[s._v("五、利用 Express 托管静态文件")])]),s._v(" "),n("p",[n("strong",[s._v("通过 Express 内置的 express.static 可以方便地托管静态文件，例如图片、CSS、JavaScript 文件等。")])]),s._v(" "),n("p",[n("strong",[s._v("将静态资源文件所在的目录作为参数传递给 express.static 中间件就可以提供静态资源文件的访问了。例如，假设在 public 目录放置了图片、CSS 和 JavaScript 文件，你就可以：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.use(express.static('public'))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("现在，public 目录下面的文件就可以访问了。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("http://localhost:3000/images/kitten.jpg\nhttp://localhost:3000/css/style.css\nhttp://localhost:3000/js/app.js\nhttp://localhost:3000/images/bg.png\nhttp://localhost:3000/hello.html\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("blockquote",[n("p",[n("strong",[s._v("所有文件的路径都是相对于存放目录的，因此，存放静态文件的目录名不会出现在 URL 中。")])])]),s._v(" "),n("p",[n("strong",[s._v("如果你的静态资源存放在多个目录下面，你可以多次调用 express.static 中间件：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.use(express.static('public'))\napp.use(express.static('files'))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("访问静态资源文件时，express.static 中间件会根据目录添加的顺序查找所需的文件。")])]),s._v(" "),n("p",[n("strong",[s._v("如果你希望所有通过 express.static 访问的文件都存放在一个“虚拟（virtual）”目录（即目录根本不存在）下面，可以通过为静态资源目录指定一个挂载路径的方式来实现，如下所示：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.use('/static', express.static('public'))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("现在，你就可以通过带有 “/static” 前缀的地址来访问 public 目录下面的文件了。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("http://localhost:3000/static/images/kitten.jpg\nhttp://localhost:3000/static/css/style.css\nhttp://localhost:3000/static/js/app.js\nhttp://localhost:3000/static/images/bg.png\nhttp://localhost:3000/static/hello.html\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"六、使用中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六、使用中间件"}},[s._v("#")]),s._v(" "),n("strong",[s._v("六、使用中间件")])]),s._v(" "),n("p",[n("strong",[s._v("Express 是一个自身功能极简，完全是由路由和中间件构成一个的 web 开发框架：从本质上来说，一个 Express 应用就是在调用各种中间件。")])]),s._v(" "),n("p",[n("strong",[s._v("中间件（Middleware） 是一个函数，它可以访问请求对象（request object (req)）, 响应对象（response object (res)）, 和 web 应用中处于请求-响应循环流程中的中间件，一般被命名为 next 的变量。")])]),s._v(" "),n("p",[n("strong",[s._v("中间件的功能包括：")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("执行任何代码。")])]),s._v(" "),n("li",[n("strong",[s._v("修改请求和响应对象。")])]),s._v(" "),n("li",[n("strong",[s._v("终结请求-响应循环。")])]),s._v(" "),n("li",[n("strong",[s._v("调用堆栈中的下一个中间件。")])])]),s._v(" "),n("p",[n("strong",[s._v("如果当前中间件没有终结请求-响应循环，则必须调用 next() 方法将控制权交给下一个中间件，否则请求就会挂起。")])]),s._v(" "),n("p",[n("strong",[s._v("Express 应用可使用如下几种中间件：")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("应用级中间件")])]),s._v(" "),n("li",[n("strong",[s._v("路由级中间件")])]),s._v(" "),n("li",[n("strong",[s._v("错误处理中间件")])]),s._v(" "),n("li",[n("strong",[s._v("内置中间件")])]),s._v(" "),n("li",[n("strong",[s._v("第三方中间件")])])]),s._v(" "),n("p",[n("strong",[s._v("使用可选则挂载路径，可在应用级别或路由级别装载中间件。另外，你还可以同时装在一系列中间件函数，从而在一个挂载点上创建一个子中间件栈。")])]),s._v(" "),n("h4",{attrs:{id:"_1、应用级中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、应用级中间件"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1、应用级中间件")])]),s._v(" "),n("p",[n("strong",[s._v("应用级中间件绑定到 app 对象 使用 app.use() 和 app.METHOD()， 其中， METHOD 是需要处理的 HTTP 请求的方法，例如 GET, PUT, POST 等等，全部小写。例如：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var app = express()\n\n// 没有挂载路径的中间件，应用的每个请求都会执行该中间件\napp.use(function (req, res, next) {\n  console.log('Time:', Date.now())\n  next()\n})\n\n// 挂载至 /user/:id 的中间件，任何指向 /user/:id 的请求都会执行它\napp.use('/user/:id', function (req, res, next) {\n  console.log('Request Type:', req.method)\n  next()\n})\n\n// 路由和句柄函数(中间件系统)，处理指向 /user/:id 的 GET 请求\napp.get('/user/:id', function (req, res, next) {\n  res.send('USER')\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[n("strong",[s._v("下面这个例子展示了在一个挂载点装载一组中间件。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 一个中间件栈，对任何指向 /user/:id 的 HTTP 请求打印出相关信息\napp.use('/user/:id', function(req, res, next) {\n  console.log('Request URL:', req.originalUrl)\n  next()\n}, function (req, res, next) {\n  console.log('Request Type:', req.method)\n  next()\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[n("strong",[s._v("作为中间件系统的路由句柄，使得为路径定义多个路由成为可能。在下面的例子中，为指向 /user/:id 的 GET 请求定义了两个路由。第二个路由虽然不会带来任何问题，但却永远不会被调用，因为第一个路由已经终止了请求-响应循环。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 一个中间件栈，处理指向 /user/:id 的 GET 请求\napp.get('/user/:id', function (req, res, next) {\n  console.log('ID:', req.params.id)\n  next()\n}, function (req, res, next) {\n  res.send('User Info')\n})\n\n// 处理 /user/:id， 打印出用户 id\napp.get('/user/:id', function (req, res, next) {\n  res.end(req.params.id)\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[n("strong",[s._v("如果需要在中间件栈中跳过剩余中间件，调用 next('route') 方法将控制权交给下一个路由。 注意： next('route') 只对使用 app.VERB() 或 router.VERB() 加载的中间件有效。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 一个中间件栈，处理指向 /user/:id 的 GET 请求\napp.get('/user/:id', function (req, res, next) {\n  // 如果 user id 为 0, 跳到下一个路由\n  if (req.params.id == 0) next('route')\n  // 否则将控制权交给栈中下一个中间件\n  else next() //\n}, function (req, res, next) {\n  // 渲染常规页面\n  res.render('regular')\n});\n\n// 处理 /user/:id， 渲染一个特殊页面\napp.get('/user/:id', function (req, res, next) {\n  res.render('special')\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h4",{attrs:{id:"_2、路由级中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、路由级中间件"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2、路由级中间件")])]),s._v(" "),n("p",[n("strong",[s._v("路由级中间件和应用级中间件一样，只是它绑定的对象为 express.Router()。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var router = express.Router()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("路由级使用 router.use() 或 router.VERB() 加载。")])]),s._v(" "),n("p",[n("strong",[s._v("上述在应用级创建的中间件系统，可通过如下代码改写为路由级：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var app = express()\nvar router = express.Router()\n\n// 没有挂载路径的中间件，通过该路由的每个请求都会执行该中间件\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now())\n  next()\n})\n\n// 一个中间件栈，显示任何指向 /user/:id 的 HTTP 请求的信息\nrouter.use('/user/:id', function(req, res, next) {\n  console.log('Request URL:', req.originalUrl)\n  next()\n}, function (req, res, next) {\n  console.log('Request Type:', req.method)\n  next()\n})\n\n// 一个中间件栈，处理指向 /user/:id 的 GET 请求\nrouter.get('/user/:id', function (req, res, next) {\n  // 如果 user id 为 0, 跳到下一个路由\n  if (req.params.id == 0) next('route')\n  // 负责将控制权交给栈中下一个中间件\n  else next() //\n}, function (req, res, next) {\n  // 渲染常规页面\n  res.render('regular')\n})\n\n// 处理 /user/:id， 渲染一个特殊页面\nrouter.get('/user/:id', function (req, res, next) {\n  console.log(req.params.id)\n  res.render('special')\n})\n\n// 将路由挂载至应用\napp.use('/', router)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("h3",{attrs:{id:"_3、错误处理中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、错误处理中间件"}},[s._v("#")]),s._v(" "),n("strong",[s._v("3、错误处理中间件")])]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("错误处理中间件有 4 个参数，定义错误处理中间件时必须使用这 4 个参数。即使不需要 next 对象，也必须在签名中声明它，否则中间件会被识别为一个常规中间件，不能处理错误。")])])]),s._v(" "),n("p",[n("strong",[s._v("错误处理中间件和其他中间件定义类似，只是要使用 4 个参数，而不是 3 个，其签名如下： (err, req, res, next)。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.use(function(err, req, res, next) {\n  console.error(err.stack)\n  res.status(500).send('Something broke!')\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"_4、内置中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、内置中间件"}},[s._v("#")]),s._v(" "),n("strong",[s._v("4、内置中间件")])]),s._v(" "),n("p",[n("strong",[s._v("从 4.x 版本开始，, Express 已经不再依赖 Connect 了。除了 express.static, Express 以前内置的中间件现在已经全部单独作为模块安装使用了。请参考 中间件列表。")])]),s._v(" "),n("p",[n("strong",[n("strong",[s._v("express.static(root, [options])")])])]),s._v(" "),n("p",[n("strong",[s._v("express.static 是 Express 唯一内置的中间件。它基于 serve-static，负责在 Express 应用中提托管静态资源。")])]),s._v(" "),n("p",[n("strong",[s._v("参数 root 指提供静态资源的根目录。")])]),s._v(" "),n("p",[n("strong",[s._v("可选的 options 参数拥有如下属性。")])]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[s._v("属性")])]),s._v(" "),n("th",[n("strong",[s._v("描述")])]),s._v(" "),n("th",[n("strong",[s._v("类型")])]),s._v(" "),n("th",[n("strong",[s._v("缺省值")])])])]),s._v(" "),n("tbody",[n("tr",[n("td",[n("strong",[s._v("dotfiles")])]),s._v(" "),n("td",[n("strong",[s._v("是否对外输出文件名以点（.）开头的文件。可选值为 “allow”、“deny” 和 “ignore”")])]),s._v(" "),n("td",[n("strong",[s._v("String")])]),s._v(" "),n("td",[n("strong",[s._v("“ignore”")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("etag")])]),s._v(" "),n("td",[n("strong",[s._v("是否启用 etag 生成")])]),s._v(" "),n("td",[n("strong",[s._v("Boolean")])]),s._v(" "),n("td",[n("strong",[s._v("true")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("extensions")])]),s._v(" "),n("td",[n("strong",[s._v("设置文件扩展名备份选项")])]),s._v(" "),n("td",[n("strong",[s._v("Array")])]),s._v(" "),n("td",[n("strong",[s._v("[]")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("index")])]),s._v(" "),n("td",[n("strong",[s._v("发送目录索引文件，设置为 false 禁用目录索引。")])]),s._v(" "),n("td",[n("strong",[s._v("Mixed")])]),s._v(" "),n("td",[n("strong",[s._v("“index.html”")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("lastModified")])]),s._v(" "),n("td",[n("strong",[s._v("设置 Last-Modified 头为文件在操作系统上的最后修改日期。可能值为 true 或 false。")])]),s._v(" "),n("td",[n("strong",[s._v("Boolean")])]),s._v(" "),n("td",[n("strong",[s._v("true")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("maxAge")])]),s._v(" "),n("td",[n("strong",[s._v("以毫秒或者其字符串格式设置 Cache-Control 头的 max-age 属性。")])]),s._v(" "),n("td",[n("strong",[s._v("Number")])]),s._v(" "),n("td",[n("strong",[s._v("0")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("redirect")])]),s._v(" "),n("td",[n("strong",[s._v("当路径为目录时，重定向至 “/”。")])]),s._v(" "),n("td",[n("strong",[s._v("Boolean")])]),s._v(" "),n("td",[n("strong",[s._v("true")])])]),s._v(" "),n("tr",[n("td",[n("strong",[s._v("setHeaders")])]),s._v(" "),n("td",[n("strong",[s._v("设置 HTTP 头以提供文件的函数。")])]),s._v(" "),n("td",[n("strong",[s._v("Function")])]),s._v(" "),n("td")])])]),s._v(" "),n("p",[n("strong",[s._v("下面的例子使用了 express.static 中间件，其中的 options 对象经过了精心的设计。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var options = {\n  dotfiles: 'ignore',\n  etag: false,\n  extensions: ['htm', 'html'],\n  index: false,\n  maxAge: '1d',\n  redirect: false,\n  setHeaders: function (res, path, stat) {\n    res.set('x-timestamp', Date.now())\n  }\n}\n\napp.use(express.static('public', options))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[n("strong",[s._v("每个应用可有多个静态目录。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.use(express.static('public'))\napp.use(express.static('uploads'))\napp.use(express.static('files'))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h4",{attrs:{id:"_5、第三方中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、第三方中间件"}},[s._v("#")]),s._v(" "),n("strong",[s._v("5、第三方中间件")])]),s._v(" "),n("p",[n("strong",[s._v("通过使用第三方中间件从而为 Express 应用增加更多功能。")])]),s._v(" "),n("p",[n("strong",[s._v("安装所需功能的 node 模块，并在应用中加载，可以在应用级加载，也可以在路由级加载。")])]),s._v(" "),n("p",[n("strong",[s._v("下面的例子安装并加载了一个解析 cookie 的中间件： cookie-parser")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ npm install cookie-parser\nvar express = require('express')\nvar app = express()\nvar cookieParser = require('cookie-parser')\n\n// 加载用于解析 cookie 的中间件\napp.use(cookieParser())\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"七、在-express-中使用模板引擎"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#七、在-express-中使用模板引擎"}},[s._v("#")]),s._v(" "),n("strong",[s._v("七、在 Express 中使用模板引擎")])]),s._v(" "),n("p",[n("strong",[s._v("需要在应用中进行如下设置才能让 Express 渲染模板文件：")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("views, 放模板文件的目录，比如： app.set('views', './views')")])]),s._v(" "),n("li",[n("strong",[s._v("view engine, 模板引擎，比如： app.set('view engine', 'ejs')")])])]),s._v(" "),n("h4",{attrs:{id:"art-template"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#art-template"}},[s._v("#")]),s._v(" "),n("strong",[s._v("art-template")])]),s._v(" "),n("p",[n("strong",[s._v("art-template for express 4.x.")])]),s._v(" "),n("h5",{attrs:{id:"_1、install"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、install"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1、Install")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm install --save art-template\nnpm install --save express-art-template\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h5",{attrs:{id:"_2、example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、example"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2、Example")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var express = require('express')\nvar app = express()\n\n// view engine setup\napp.engine('art', require('express-art-template'))\napp.set('view', {\n    debug: process.env.NODE_ENV !== 'production'\n})\napp.set('views', path.join(__dirname, 'views'))\napp.set('view engine', 'art')\n\n// routes\napp.get('/', function (req, res) {\n    res.render('index.art', {\n        user: {\n            name: 'aui',\n            tags: ['art', 'template', 'nodejs']\n        }\n    })\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);