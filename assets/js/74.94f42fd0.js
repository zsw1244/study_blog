(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{491:function(s,n,a){"use strict";a.r(n);var e=a(22),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"typescript学习笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript学习笔记"}},[s._v("#")]),s._v(" "),a("strong",[s._v("TypeScript学习笔记")])]),s._v(" "),a("h2",{attrs:{id:"一、-typescript起步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、-typescript起步"}},[s._v("#")]),s._v(" "),a("strong",[s._v("一、 TypeScript起步")])]),s._v(" "),a("h3",{attrs:{id:"_1-1typescript简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1typescript简介"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.1TypeScript简介")])]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("TypeScript 是由微软开发的一款开源的编程语言。")])]),s._v(" "),a("li",[a("strong",[s._v("TypeScript 是 Javascript 的超级，遵循最新的 ES6、Es5 规范。TypeScript 扩展了 JavaScript 的语法。")])]),s._v(" "),a("li",[s._v("**TypeScript 更像后端 java、C#这样的面向对象语言可以让 js 开发大型企业项目。 **")]),s._v(" "),a("li",[s._v("**谷歌也在大力支持 Typescript 的推广，谷歌的 angular2.x+就是基于 Typescript 语法。 **")]),s._v(" "),a("li",[a("strong",[s._v("前端三大框架： Angular、Vue 、React 都可以集成 TypeScript。")])])]),s._v(" "),a("h3",{attrs:{id:"_1-2-typescript环境搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-typescript环境搭建"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.2  TypeScript环境搭建")])]),s._v(" "),a("p",[a("strong",[s._v("全局安装ts")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm install -g typescript\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("编译ts文件为js文件")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("tsc helloworld.ts\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_1-3-typescript基于vscode自动编译-ts文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-typescript基于vscode自动编译-ts文件"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.3 TypeScript基于vscode自动编译.ts文件")])]),s._v(" "),a("p",[a("strong",[a("strong",[s._v("1.生成tsconfig.json文件")])])]),s._v(" "),a("p",[a("strong",[s._v("在项目根目录下运行下面命令：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("tsc --init  //运行命令后自动生成配置文件\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[a("strong",[s._v("2.在vscode上方的菜单栏中点击【任务】->【运行任务...】")])])]),s._v(" "),a("p",[a("strong",[a("strong",[s._v("3.点击【tsc:监视 - tsconfig.json】")])])]),s._v(" "),a("h2",{attrs:{id:"二、typescript的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、typescript的数据类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("二、TypeScript的数据类型")])]),s._v(" "),a("p",[a("strong",[s._v("typescript中为了使编写的代码更规范，更有利于维护，增加了类型校验，在typescript中主要给我们提供了以下数据类型")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    布尔类型（boolean）\n    数字类型（number）\n    字符串类型(string)\n    数组类型（array）\n    元组类型（tuple）\n    枚举类型（enum）\n    任意类型（any）\n    null 和 undefined\n    void类型\n    never类型\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"_2-1-布尔类型-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-布尔类型-boolean"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.1 布尔类型（boolean）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var flag:boolean=true; // ts规范需要指定变量的类型\n// flag=123;  //错误\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_2-2-数字类型-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-数字类型-number"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.2 数字类型（number）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var num:number = 123;\nnum = 456;    // 正确\nnum = 'str';    // 错误\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_2-3-字符串类型-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-字符串类型-string"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.3 字符串类型 (string)")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str:string='this is ts';\nstr='haha';  // 正确\nstr=true;  // 错误\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_2-4-数组类型-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-数组类型-array"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.4 数组类型（array）")])]),s._v(" "),a("p",[a("strong",[s._v("ts中定义数组有两种方式:")])]),s._v(" "),a("p",[a("strong",[s._v("第一种：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var arr:number[]=[11,22,33,44];\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("第二种：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var arr:Array<number>=[11,22,33,55];\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("这两种方式均充分体现ts需要指定数据的类型，数组也不例外")])]),s._v(" "),a("h3",{attrs:{id:"_2-5-元组类型-tuple-属于数组的一种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-元组类型-tuple-属于数组的一种"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.5 元组类型（tuple）--属于数组的一种")])]),s._v(" "),a("p",[a("strong",[s._v("元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。")]),s._v("**\n**"),a("strong",[s._v("例如定义一个具有两个值，且两个值分别为字符串和数字的数组:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let arr:[number,string] = [123,'this is ts'];\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-6-枚举类型-enum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-枚举类型-enum"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.6 枚举类型（enum)")])]),s._v(" "),a("p",[a("strong",[s._v("语法：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("enum 枚举名{ \n                标识符[=整型常数], \n                标识符[=整型常数], \n                ... \n                标识符[=整型常数], \n            } ;  \n          \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("用法：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("enum Flag {success=1,error=2};\nlet s:Flag=Flag.success;\nlet f:Flag=Flag.success;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("enum Color {blue,red,'orange'};\nvar c:Color=Color.red;\nconsole.log(c);   //1  如果标识符没有赋值 它的值就是下标\n\nenum Color {blue,red=3,'orange'};\nvar c:Color = Color.red;\nconsole.log(c);   //3\nvar c:Color = Color.orange;\nconsole.log(c);   //4\n\nenum Err {'undefined' = -1,'null' = -2,'success' = 1};\nvar statusCode:Err = Err.success;\nconsole.log(e);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"_2-7-任意类型-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-任意类型-any"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.7 任意类型（any）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var num:any=123;\nnum='str';\nnum=true;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_2-8-null-和-undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-null-和-undefined"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.8 null 和 undefined")])]),s._v(" "),a("p",[a("strong",[s._v("null 和 undefined 为其他（never）类型的子类型")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var num:number;\nconsole.log(num)  //输出：undefined   报错\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var num:undefined;\nconsole.log(num)  //输出：undefined  //不报错\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var b:null;\nb = 123 // 错误写法\nb = null;\nconsole.log(b)  //输出：null  //正确\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("一个类型有可能是number类型也有可能是undefined类型，那我们就可以使用联合类型给其指定")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let num:number | undefined | null\nconsole.log(num);  \nnum = null\nconsole.log(num);  \nnum = 123\nconsole.log(num);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_2-9-void类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-void类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.9 void类型")])]),s._v(" "),a("p",[a("strong",[s._v("void类型 :typescript中的void表示没有任何类型，一般用于定义函数的时候方法没有返回值。")]),s._v("**\n**"),a("strong",[s._v("用来表示函数无返回值的情况：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function run():void{\n            console.log('run')\n        }\nrun();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("函数有返回值的情况，规范做法是写出返回值类型：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function fn():number{\n           return 123;\n        }\n fn();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_2-10-never类型-仅做了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-never类型-仅做了解"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.10 never类型(仅做了解)")])]),s._v(" "),a("p",[a("strong",[s._v("其他类型 （包括 null 和 undefined）的子类型，代表从不会出现的值。")])]),s._v(" "),a("p",[a("strong",[s._v("这意味着声明never的变量只能被never类型所赋值。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var a:undefined;\na = undefined;\nvar b:null;\nb = null;\n\nlet a:never   \na = (()=>{\n  \n    throw new Error("错了")  \n})()         // 抛出错误属于其他类型\nconsole.log(a);      \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"三、typescript中的函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、typescript中的函数"}},[s._v("#")]),s._v(" "),a("strong",[s._v("三、typeScript中的函数")])]),s._v(" "),a("h3",{attrs:{id:"_3-1-函数的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-函数的定义"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.1 函数的定义")])]),s._v(" "),a("p",[a("strong",[s._v("第一种：函数声明法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function run():string{\n\treturn 'run';\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("第二种：匿名函数")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var fun2 = function():number{\n\treturn 123;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("带參函数：")])]),s._v(" "),a("p",[a("strong",[s._v("带參函数的函数声明法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function getInfo(name:string,age:number):string{\n\treturn `${name} --- ${age}`;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("带參函数的匿名函数法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var getInfo=function(name:string,age:number):string{\n\treturn `${name} --- ${age}`;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("无返回值的方法：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function run():void{\n console.log('run')\n }\nrun();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_3-2-可选参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-可选参数"}},[s._v("#")]),s._v(" **3.2 可选参数 **")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function getInfo(name:string,age?:number):string{\n\tif(age){\n\t\t\treturn `${name} --- ${age}`;\n\t\t}else{\n        \treturn `${name} ---年龄保密`;\n        }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[a("strong",[s._v("注意:可选参数必须配置到参数的最后面")])])]),s._v(" "),a("h3",{attrs:{id:"_3-3-默认参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-默认参数"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.3 默认参数")])]),s._v(" "),a("p",[a("strong",[s._v("es5里面没法设置默认参数，es6和ts中都可以设置默认参数")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function getInfo(name:string,age:number=20):string{\n    if(age){\n        return `${name} --- ${age}`;\n    }else{\n        return `${name} ---年龄保密`;\n    }\n }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"_3-4-剩余参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-剩余参数"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.4 剩余参数")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function sum(a:number,b:number,c:number,d:number):number{\n \treturn a+b+c+d;\n}\nsum(1,2,3,4);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 三点运算符：接受实參传过来的值\nfunction sum(...res:number[]):number{ \n      var sum=0;\n      // 在函数中可以直接使用这个数组\n      for(let i=0;i<result.length;i++){\n      \tsum+=res[i];  \n      }\n      return sum;\n}\nsum(1,2,3,4,5,6);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function sum(a:number,b:number,...result:number[]):number{   \n        var sum=a+b;\n        for(var i=0;i<result.length;i++){\n            sum+=result[i];  \n        }\n        return sum;\n }\n sum(1,2,3,4,5,6);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"_3-5-ts函数重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-ts函数重载"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.5 ts函数重载")])]),s._v(" "),a("p",[a("strong",[s._v("typescript中的重载：通过为同一个函数提供多个函数类型定义来达到多种功能的目的。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/* 参数个数一样 */\n\n// function getInfo(name:string):string;\n// function getInfo(age:number):string;\n// function getInfo(str:any):any{\n//     if(typeof str==='string'){\n//         return '我叫：'+str;\n//     }else{\n//         return '我的年龄是'+str;\n//     }\n// }\n// alert(getInfo('张三'));   //正确\n// alert(getInfo(20));   //正确\n// alert(getInfo(true));    //错误写法\n\n/* 参数个数不一致 */\n\nfunction getInfo(name:string):string;\nfunction getInfo(name:string,age:number):string;\nfunction getInfo(name:any,age?:any):any{\n    if(age){\n        return '我叫：'+name+'我的年龄是'+age;\n    }else{\n        return '我叫：'+name;\n    }\n}\n// alert(getInfo('zhangsan'));  /*正确*/\n// alert(getInfo(123));  错误\n// alert(getInfo('zhangsan',20));\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("h3",{attrs:{id:"_3-6-箭头函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-箭头函数"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.6 箭头函数")])]),s._v(" "),a("p",[a("strong",[s._v("和es6语法用法一样")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("setTimeout(()=>{\n    alert('run');\n},1000);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"es5中的类-复习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es5中的类-复习"}},[s._v("#")]),s._v(" "),a("strong",[s._v("es5中的类(复习)")])]),s._v(" "),a("p",[a("strong",[s._v("1 基础类")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Person(){\n     this.name = '张三';\n     this.age = 20;\n }\nvar p = new Person();\nalert(p.name);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("2 构造函数和原型链里面增加方法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Person(){\n     this.name = '张三';  /*属性*/\n     this.age = 20;\n     this.run = function(){\n           alert(this.name+'在运动');\n      }\n}\n//原型链上面的属性会被多个实例共享   构造函数不会\nPerson.prototype.sex = \"男\";\nPerson.prototype.work = function(){\n     alert(this.name+'在工作');\n}\n\nvar p = new Person();\n// alert(p.name);\n// p.run();\np.work();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[a("strong",[s._v("3 类里面的静态方法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Person(){\n      this.name='张三';  /*属性*/\n      this.age=20;\n      this.run=function(){  /*实例方法*/\n       \talert(this.name+'在运动');\n     }  \n}\n      \nPerson.getInfo=function(){\n      alert('我是静态方法');\n}\n //原型链上面的属性会被多个实例共享   构造函数不会\nPerson.prototype.sex=\"男\";\nPerson.prototype.work=function(){\n     alert(this.name+'在工作');\n}\n\nvar p=new Person();  \np.work();\n\n//调用静态方法\nPerson.getInfo();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[a("strong",[s._v("4 es5里面的继承--对象冒充实现继承")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Person() {\n    this.name = '张三'; /*属性*/\n    this.age = 20;\n    this.run = function () {\n        /*实例方法*/\n        alert(this.name + '在运动');\n  \n}\nPerson.prototype.sex = \"男\";\nPerson.prototype.work = function () {\n    alert(this.name + '在工作');\n\n}\n\n//Web类 继承Person类   原型链+对象冒充的组合继承模式\n\nfunction Web() {\n    Person.call(this); /*对象冒充实现继承*/\n}\n\nvar w = new Web();\n// w.run();  //对象冒充可以继承构造函数里面的属性和方法\n\nw.work(); //对象冒充可以继承构造函数里面的属性和方法   但是没法继承原型链上面的属性和方法\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("p",[a("strong",[s._v("5 es5里面的继承--原型链实现继承")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Person(){\n    this.name='张三';  /*属性*/\n    this.age=20;\n    this.run=function(){  /*实例方法*/\n        alert(this.name+'在运动');\n    }\n}    \nPerson.prototype.sex=\"男\";\nPerson.prototype.work=function(){\n        alert(this.name+'在工作');\n}\n\n\nfunction Web(){\n\n}\n\nWeb.prototype=new Person();   //原型链实现继承\nvar w=new Web();\n//原型链实现继承:可以继承构造函数里面的属性和方法 也可以继承原型链上面的属性和方法\n//w.run();\nw.work();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[a("strong",[s._v("6 原型链实现继承的问题")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Person(name,age){\n    this.name=name;  /*属性*/\n    this.age=age;\n    this.run=function(){  /*实例方法*/\n        alert(this.name+'在运动');\n  \n}    \nPerson.prototype.sex=\"男\";\nPerson.prototype.work=function(){\n\talert(this.name+'在工作');\n}  \nvar p=new Person('李四',20);\np.run();\n\nfunction Person(name,age){\n    this.name=name;  /*属性*/\n    this.age=age;\n    this.run=function(){  /*实例方法*/\n        alert(this.name+'在运动');\n    }\n}    \nPerson.prototype.sex=\"男\";\nPerson.prototype.work=function(){\n    alert(this.name+'在工作');\n}\n\nfunction Web(name,age){ }\nWeb.prototype=new Person();\nvar w=new Web('赵四',20);   //实例化子类的时候没法给父类传参\nw.run();\n\n// var w1=new Web('王五',22);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])]),a("p",[a("strong",[s._v("7 原型链+对象冒充的组合继承模式")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Person(name,age){\n    this.name=name;  /*属性*/\n    this.age=age;\n    this.run=function(){  /*实例方法*/\n        alert(this.name+'在运动');\n    }\n}\n\nPerson.prototype.sex=\"男\";\nPerson.prototype.work=function(){\n    alert(this.name+'在工作');\n}\n\nfunction Web(name,age){\n    Person.call(this,name,age);   //对象冒充继承   实例化子类可以给父类传参\n}\n\nWeb.prototype=new Person();\n\nvar w=new Web('赵四',20);   //实例化子类的时候没法给父类传参\n\n// w.run();\nw.work();\n\n// var w1=new Web('王五',22);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[a("strong",[s._v("8 原型链+对象冒充继承的另一种方式")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Person(name, age) {\n    this.name = name; /*属性*/\n    this.age = age;\n    this.run = function () {\n        /*实例方法*/\n        alert(this.name + '在运动');\n    }\n\n}\nPerson.prototype.sex = \"男\";\nPerson.prototype.work = function () {\n    alert(this.name + '在工作');\n}\n\nfunction Web(name, age) {\n\tPerson.call(this, name, age); //对象冒充继承  可以继承构造函数里面的属性和方法、实例化子类可以给父类传参\n}\n\nWeb.prototype = Person.prototype;\nvar w = new Web('赵四', 20); \n\nw.run();\n// w.work();\n\n// var w1=new Web('王五',22);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("h2",{attrs:{id:"四、typescript中的类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、typescript中的类"}},[s._v("#")]),s._v(" "),a("strong",[s._v("四、typeScript中的类")])]),s._v(" "),a("h3",{attrs:{id:"_4-1-ts中类的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-ts中类的定义"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.1 ts中类的定义")])]),s._v(" "),a("p",[a("strong",[s._v("基本语法：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class 类名 {\n\n\t属性名:属性类型;\n\n\tconstructor(){}\n\n\t// 也可以包含方法\n\tfn(){}\n\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("strong",[s._v("实体化类：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var obj = new Student(); \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Person{\n\n    name:string;   //属性  前面省略了public关键词\n\n    constructor(n:string){  //构造函数   实例化类的时候触发的方法\n        this.name=n;\n    }\n\n    run():void{\n\n        alert(this.name);\n    }\n\n}\nvar p = new Person('张三');\n\np.run()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Person{\n    name:string; \n  \n    constructor(name:string){  //构造函数   实例化类的时候触发的方法\n        this.name=name;\n    }\n  \n    getName():string{\n        return this.name;\n    }\n  \n    setName(name:string):void{\n        this.name=name;\n    }\n}\n\nvar p=new Person('张三');\nalert(p.getName());\n\np.setName('李四');\nalert(p.getName());\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("h3",{attrs:{id:"_4-2-ts中实现继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-ts中实现继承"}},[s._v("#")]),s._v(" **4.2 ts中实现继承  **")]),s._v(" "),a("p",[a("strong",[s._v("ts中继承类会使用到extends和super关键字，被继承的类一般叫叫基类、父类、超类；继承的类一般被称作派生类、子类")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Person{\n    name:string;\n  \n    constructor(name:string){\n        this.name=name;\n    }\n  \n    run():string{\n        return `${this.name}在运动`\n    }\n}\n\n// var p = new Person('王五');\n// alert(p.run());\n\nclass Web extends Person{\n    constructor(name:string){\n        super(name);  /*初始化父类的构造函数*/\n    }\n}\n\nvar w=new Web('李四');\nalert(w.run());\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[a("strong",[s._v("ts中父类的方法和子类的方法一致时，初始化谁就执行谁的方法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Person{\n\n    name:string;\n\n    constructor(name:string){\n        this.name=name;\n    }\n\n    run():string{\n\n        return `${this.name}在运动`\n    }\n}\n// var p=new Person('王五');\n// alert(p.run())\n\n\nclass Web extends Person{\n    constructor(name:string){\n\t\t// 如果继承的父类有构造函数，此时派生类必须调用 super()，它会执行父类的构造函数。 而且，在构造函数里访问this的属性之前，我们一定要调用super()。这个是TypeScript强制执行的一条重要规则。\n        super(name);  /*初始化父类的构造函数*/\n      \n    }\n    run():string{\n        return `${this.name}在运动-子类`\n    }\n    work(){\n        alert(`${this.name}在工作`)\n    }\n}\n\n// var w=new Web('李四');\n// alert(w.run());\n// w.work();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("h3",{attrs:{id:"_4-3-类里面的修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-类里面的修饰符"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.3 类里面的修饰符")])]),s._v(" "),a("p",[a("strong",[s._v("typescript里面定义属性的时候给我们提供了 三种修饰符")])]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("public :公有          在当前类里面、 子类  、类外面都可以访问")])]),s._v(" "),a("li",[a("strong",[s._v("protected：保护类型    在当前类里面、子类里面可以访问 ，在类外部没法访问")])]),s._v(" "),a("li",[a("strong",[s._v("private ：私有         在当前类里面可以访问，子类、类外部都没法访问")])])]),s._v(" "),a("p",[a("strong",[s._v("注意： 属性如果不加修饰符 默认就是 公有 （public）")])]),s._v(" "),a("h4",{attrs:{id:"_4-3-1-public-公有-在类里面、-子类-、类外面都可以访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-public-公有-在类里面、-子类-、类外面都可以访问"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.3.1 public :公有 -- 在类里面、 子类  、类外面都可以访问")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Person{\n\n    public name:string;  /*公有属性*/\n\n    constructor(name:string){\n        this.name=name;\n    }\n\n    run():string{\n\n        return `${this.name}在运动`\n    }\n}\n// var p=new Person('王五');\n// alert(p.run())\n\n\nclass Web extends Person{\n    constructor(name:string){\n\n        super(name);  /*初始化父类的构造函数*/\n    }\n    run():string{\n\n        return `${this.name}在运动-子类`\n    }\n    work(){\n\n        alert(`${this.name}在工作`)\n    }\n}\n\nvar w=new Web('李四');\n\nw.work();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("p",[a("strong",[s._v("类外部访问公有属性:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Person{\n\n    public name:string;  /*公有属性*/\n\n    constructor(name:string){\n        this.name=name;\n    }\n\n    run():string{\n\n        return `${this.name}在运动`\n    }\n}\n\nvar  p=new Person('哈哈哈');\n\nalert(p.name);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h4",{attrs:{id:"_4-3-2-protected-保护类型-在类里面、子类里面可以访问-在类外部没法访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-protected-保护类型-在类里面、子类里面可以访问-在类外部没法访问"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.3.2 protected：保护类型--在类里面、子类里面可以访问 ，在类外部没法访问")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Person{\n\n        protected name:string;  /*公有属性*/\n\n        constructor(name:string){\n            this.name=name;\n        }\n\n        run():string{\n\n            return `${this.name}在运动`\n        }\n    }\n    var p=new Person('王五');\n    alert(p.run());\n  \n    class Web extends Person{\n    constructor(name:string){\n\n        super(name);  /*初始化父类的构造函数*/\n    }                \n    work(){\n\n        alert(`${this.name}在工作`)\n    }\n}\n\nvar w=new Web('李四11');\nw.work();\nalert( w.run())\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("h4",{attrs:{id:"_4-3-3-private-私有-在类里面可以访问-子类、类外部都没法访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-private-私有-在类里面可以访问-子类、类外部都没法访问"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.3.3 private ：私有 --在类里面可以访问，子类、类外部都没法访问")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Person{\n\n        private name:string;  /*私有*/\n\n        constructor(name:string){\n            this.name=name;\n        }\n\n        run():string{\n\n            return `${this.name}在运动`\n        }\n    }\n\n    var p = new Person('哈哈哈').name // 报错，只能在Person类中访问;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"_4-4-静态属性-静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-静态属性-静态方法"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.4 静态属性 静态方法")])]),s._v(" "),a("p",[a("strong",[s._v("静态属性与静态方法定义存在于")]),s._v("****类本身上面****"),a("strong",[s._v("而不是类的实例上的属性和方法，不能直接被实例化对象直接访问，只能被类本身调用，使用 static定义：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Per{\n    public name:string;\n    public age:number=20;\n  \n    //静态属性\n    static sex=\"男\";\n  \n    constructor(name:string) {\n            this.name=name;\n    }\n    run(){  /*实例方法*/\n        alert(`${this.name}在运动`)\n    }\n    work(){\n        alert(`${this.name}在工作`)\n    }\n  \n    static print(){  /*静态方法  不能直接调用类中的数据，但可以通过访问静态属性的方式来获取数据*/\n    \t// alert('print方法'+this.name); /* 错误，访问不到 */\n        alert('print方法'+Per.sex); /* 正确，可以访问静态方法*/\n    }\n}\n\n// var p=new Per('张三');\n// p.run();\n\nPer.print();\nalert(Per.sex);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("h3",{attrs:{id:"_4-5-多态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-多态"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.5 多态")])]),s._v(" "),a("p",[a("strong",[s._v("父类定义一个方法不去实现，让继承它的子类去实现  每一个子类有不同的表现")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/*父类 Animal*/\nclass Animal {\n    name:string;\n    constructor(name:string) {\n        this.name=name;\n    }\n    eat(){   //具体吃什么不知道，  具体吃什么?继承它的子类去实现 ，每一个子类的表现不一样\n        console.log('吃的方法')\n    }\n}\n\n/*子类 Dog*/\nclass Dog extends Animal{\n    constructor(name:string){\n        super(name);\n    }\n    eat(){\n        return this.name+'吃肉骨头';\n    }\n}\n\n／*子类 Cat*／\nclass Cat extends Animal{\n    constructor(name:string){\n        super(name)\n    }\n    eat(){\n        return this.name+'吃鱼'\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("h3",{attrs:{id:"_4-6-抽象类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-抽象类"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.6 抽象类")])]),s._v(" "),a("p",[a("strong",[s._v("typescript中的抽象类特点：")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("它是提供其他类继承的基类，不能直接被实例化。")])]),s._v(" "),a("li",[a("strong",[s._v("用abstract关键字定义抽象类和抽象方法，抽象类中的抽象方法不包含具体实现并且必须在派生类中实现。")])]),s._v(" "),a("li",[a("strong",[s._v("abstract抽象方法只能放在抽象类里面")])]),s._v(" "),a("li",[s._v("**抽象类和抽象方法用来定义标准 **")])]),s._v(" "),a("p",[a("strong",[s._v("标准：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("abstract class Animal{\n    public name:string;\n    constructor(name:string){\n        this.name=name;\n    }\n    abstract eat():any;  //抽象方法不包含具体实现并且必须在派生类中实现。\n    run(){\n        console.log('其他方法可以不实现')\n    }\n}\n\n// var a=new Animal() /*错误的写法--抽象类不能直接被实例化*/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[a("strong",[s._v("抽象方法必须在派生类中实现:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("／*Dog 子类*／\nclass Dog extends Animal{\n    //抽象类的子类必须实现抽象类里面的抽象方法\n    constructor(name:any){\n        super(name)\n    }\n    eat(){\n        console.log(this.name+'吃粮食')\n    }\n}\nvar d=new Dog('小花花');\nd.eat();\n\n／*Cat 子类*／\nclass Cat extends Animal{\n    //抽象类的子类必须实现抽象类里面的抽象方法\n    constructor(name:any){\n        super(name)\n    }\n    run(){\n    }\n    eat(){\n        console.log(this.name+'吃老鼠')\n    }\n}\nvar c=new Cat('小花猫');\nc.eat();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h2",{attrs:{id:"五、typescript中的接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、typescript中的接口"}},[s._v("#")]),s._v(" "),a("strong",[s._v("五、typeScript中的接口")])]),s._v(" "),a("p",[a("strong",[s._v("接口的作用：在面向对象的编程中，接口是一种")]),s._v("**"),a("strong",[s._v("规范的定义******，它定义了行为和动作的规范，在程序设计里面，接口起到一种限制和规范的作用。接口定义了某一批类所需要遵守的规范，"),a("strong",[a("strong",[a("strong",[s._v("接口不关心这些类的内部状态数据，也不关心这些类里方法的实现细节，它只规定这批类里必须提供某些方法，提供这些方法的类就可以满足实际需要。")])])]),s._v(" typescrip中的接口类似于java，同时还增加了更灵活的接口类型，包括属性、函数、可索引和类等。")])]),s._v(" "),a("h3",{attrs:{id:"_5-1-属性接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-属性接口"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.1 属性接口")])]),s._v(" "),a("p",[a("strong",[s._v("定义接口，使用接口对传入参数进行约束：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 定义属性接口\ninterface FullName{\n    firstName:string;\n    secondName:string;\n}\n// 使用接口对形参进行约束\nfunction func(name:FullName):void{    //name是对象，接收的实际参数必须包含有firstName和secondName属性\n    console.log(`姓：${name.firstName}，名:${name.secondName}`);\n}\nfunc({firstName:"张",secondName:"三"})   // 这种传递方式不能有多余的属性， 否则编译报错\nlet obj = {\n    firstName:"李",\n    secondName:"四",\n    age:19\n}\nfunc(obj)  // 这种传递方式可以有多余的属性\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[a("strong",[s._v("接口规范可以被不同的方法使用，即对批量方法进行约束：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('interface FullName{\n    firstName:string;\n    secondName:string;\n}\n// 使用接口对实际参数进行约束\nfunction func(name:FullName):void{    \n    console.log(`姓：${name.firstName}，名:${name.secondName}`);\n}\n// 使用接口对实际参数进行约束\nfunction func2(info:FullName):void{    \n    console.log(`${info.firstName}----${info.secondName}`);\n}\n\nfunc({firstName:"张",secondName:"三"})  \nlet obj = {\n    firstName:"李",\n    secondName:"四",\n    age:19\n}\nfunc(obj)  \n\nfunc2({firstName:"张",secondName:"三"})\nfunc2(obj)\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("p",[a("strong",[s._v("可选属性：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('interface FullName{\n    firstName:string;\n    secondName:string;\n    age?:number;\n}\n// 使用接口对实际参数进行约束\nfunction func(name:FullName):void{    \n    console.log(`姓：${name.firstName}，名:${name.secondName}`);\n}\n// 使用接口对实际参数进行约束\nfunction func2(info:FullName):void{    \n    if(info.age){\n        console.log(`${info.firstName}----${info.secondName}----${info.age}`);\n    }\n    else{\n        console.log(`${info.firstName}----${info.secondName}`);\n    }\n}\n\nfunc({firstName:"张",secondName:"三"})  \nlet obj = {\n    firstName:"李",\n    secondName:"四",\n    age:19\n}\nfunc(obj)  \n\nfunc2({firstName:"张",secondName:"三"})\nfunc2(obj)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[a("strong",[s._v("(了解)使用举例：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 定义接口\ninterface Config{\n    type:string;\n    url:string;\n    data?:string;\n    dataType:string;\n}\n\n//原生js封装的ajax \nfunction ajax(config:Config){\n\n   var xhr = new XMLHttpRequest();\n\n   xhr.open(config.type,config.url,true);\n\n   xhr.send(config.data);\n\n   xhr.onreadystatechange = function(){\n\n        if(xhr.readyState == 4 && xhr.status == 200){\n            console.log('chengong');\n\n\n            if(config.dataType=='json'){\n\n                console.log(JSON.parse(xhr.responseText));\n            }else{\n                console.log(xhr.responseText)\n\n            }\n        }\n   }\n}\n\n// 调用\najax({\n    type:'get',\n    data:'name=zhangsan',\n    url:'http://**.com/api/productlist', //api\n    dataType:'json'\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br")])]),a("h3",{attrs:{id:"_5-2-函数类型接口-对方法进行约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-函数类型接口-对方法进行约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.2 函数类型接口--对方法进行约束")])]),s._v(" "),a("p",[a("strong",[s._v("对方法传入的参数以及返回值进行约束，也是批量约束")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//对实参和函数进行约束\ninterface SumOfNums{\n    (num1:number,num2:number):number;     // ：前是对实参的约束，：后是对返回值的约束\n}\nlet sum:SumOfNums = function(num1:number,num2:number):number{\n    return num1+num2\n}\nconsole.log(sum(10, 20));\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"_5-3-可索引接口-了解即可-不常用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-可索引接口-了解即可-不常用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.3 可索引接口（了解即可，不常用）")])]),s._v(" "),a("p",[a("strong",[s._v("对数组、对象的约束")])]),s._v(" "),a("p",[a("strong",[s._v("对数组进行约束：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 对数组进行约束\ninterface ArrItf{\n    [index:number]:number;     // ：前是对索引的约束，：后是每一个元素的类型的约束\n}\nlet arr1:ArrItf = [10, 20]    //正确写法\n// let arr1:ArrItf = [10, 20, "hello"]  //报错\nconsole.log(arr1);\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("** 对对象进行约束：**")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("interface ObjItf{\n    [index:string]:any\n}\nvar arr:ObjItf={name:'张三', age:17};\nconsole.log(arr);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_5-4-类类型接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-类类型接口"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.4 类类型接口")])]),s._v(" "),a("p",[a("strong",[s._v("对类的约束和抽象类抽象有点相似")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//对类进行约束\ninterface DogItf{\n    name:string;   //将来定义的类必须有name这个实例属性\n    eat(food:string):void;  //将来定义的类必须有eat这个实例方法\n}\nclass Animal{\n    drink(){\n        console.log("喝");\n     \n    }\n}\n\nclass Dog extends Animal implements DogItf{\n\n    name:string;\n    constructor(n:string){\n        super()\n        this.name = "小狗"\n    }\n\n    eat(food:string){\n        console.log(`${this.name}正在吃${food}`);\n    }\n}\nlet dog1 = new Dog("小白");\ndog1.eat("骨头");\ndog1.drink();\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h3",{attrs:{id:"_5-5-接口的扩展-接口可以继承、被继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-接口的扩展-接口可以继承、被继承"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.5 接口的扩展--接口可以继承、被继承")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 接口可以继承\ninterface AnimalItf{\n    eat():void;\n}\ninterface DogItf extends AnimalItf{\n    drink():void;\n}\n\nclass Dog implements DogItf{\n    drink(){\n        console.log(`喝-----`);\n    }\n\n    eat(){\n        console.log(`吃-----`);\n    }\n}\nlet dog1 = new Dog();\ndog1.eat();\ndog1.drink();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h2",{attrs:{id:"六、typescript中的泛型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、typescript中的泛型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("六、typeScript中的泛型")])]),s._v(" "),a("h3",{attrs:{id:"_6-1-泛型的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-泛型的定义"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.1 泛型的定义")])]),s._v(" "),a("p",[a("strong",[s._v("泛型：软件工程中，我们不仅要创建一致的、定义良好的API，同时也要考虑")]),s._v("****可重用性******。 组件****"),a("strong",[s._v("不仅能够支持当前的数据类型，同时也能支持未来的数据类型******，这在创建大型系统时为你提供了十分灵活的功能。")])]),s._v(" "),a("p",[a("strong",[s._v("在像C#和Java这样的语言中，可以使用泛型来创建可重用的组件，一个组件可以支持多种类型的数据。 这样用户就可以以自己的数据类型来使用组件。")])]),s._v(" "),a("p",[a("strong",[s._v("通俗理解：泛型就是解决类、接口、方法的复用性，以及对不特定数据类型的支持(类型校验)。")])]),s._v(" "),a("h3",{attrs:{id:"_6-2-泛型函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-泛型函数"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.2 泛型函数")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/*只能返回string类型的数据*/\n    function getData(value:string):string{\n        return value;\n    }\n\n/*同时返回 string类型 和number类型  （代码冗余）*/\n    function getData1(value:string):string{\n        return value;\n    }\n\n    function getData2(value:number):number{\n        return value;\n    }\n\n\n/*同时返回 string类型 和number类型       any可以解决这个问题*/\n    function getData(value:any):any{\n        return '哈哈哈';\n    }\n    getData(123);\n    getData('str');\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[a("strong",[s._v("any放弃了类型检查,传入什么 返回什么。比如:传入number 类型必须返回number类型  传入 string类型必须返回string类型。")])]),s._v(" "),a("p",[a("strong",[s._v("泛型：可以支持不特定的数据类型，T表示泛型，具体什么类型是调用这个方法的时候决定的：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function getData<T>(val:T):T{     // 当中出现的T类型由调用的时候的<>中的类型决定\n    return val\n}\nconsole.log(getData<number>(30));\nconsole.log(getData<string>("hello"));\nconsole.log(getData<boolean>(true));\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_6-3-泛型类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-泛型类"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.3 泛型类")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class GetElem{  \n\n    arr2:number[] = [];\n\n    add(val:number){\n        this.arr2.push(val)\n    }\n\n    getSecondElem():number{\n        return this.arr2[1]\n    }\n} \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[a("strong",[s._v("上面代码，将类型规定为number之后，对字符串不适用，但如果使用泛型就可以解决：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('class GetElem<T>{   //该类中需要写到类型的地方(T表示)，都可以用调用时候传进来的<>中的类型来代替，\n\n    arr2:T[] = [];\n\n    add(val:T){\n        this.arr2.push(val)\n    }\n\n    getSecondElem():T{\n        return this.arr2[1]\n    }\n} \nlet obj1 = new GetElem<number>();\nobj1.add(10);\nobj1.add(20);\nobj1.add(30);\nconsole.log(obj1.getSecondElem());\n\n\nlet obj2 = new GetElem<string>();\nobj2.add("hello");\nobj2.add(" world");\nobj2.add(" and ts");\nconsole.log(obj2.getSecondElem());\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("h3",{attrs:{id:"_6-4-泛型接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-泛型接口"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.4 泛型接口")])]),s._v(" "),a("p",[a("strong",[s._v("泛型类接口一般有两种写法")])]),s._v(" "),a("p",[a("strong",[s._v("第一种：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("interface ConfigFn{\n    <T>(value:T):T;\n}\n\nvar getData:ConfigFn=function<T>(value:T):T{\n    return value;\n}\n\n// getData<string>('张三');\n// getData<string>(1243);  //错误\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("strong",[s._v("第二种：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("interface ConfigFn<T>{\n    (value:T):T;\n}\n\nfunction getData<T>(value:T):T{\n    return value;\n}\n\nvar myGetData:ConfigFn<string>=getData;   \n\nmyGetData('20');  /*正确*/\n\n// myGetData(20)  //错误\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"七、模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、模块"}},[s._v("#")]),s._v(" "),a("strong",[s._v("七、模块")])]),s._v(" "),a("h3",{attrs:{id:"_7-1-模块的的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-模块的的概念"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.1 模块的的概念")])]),s._v(" "),a("p",[a("strong",[s._v("关于术语的一点说明: 请务必注意一点，TypeScript 1.5里术语名已经发生了变化。 ****\n"),a("strong",[a("strong",[s._v("“"),a("strong",[a("strong",[a("strong",[s._v("内部模块")])])]),s._v("”现在称做“"),a("strong",[a("strong",[a("strong",[s._v("命名空间")])])]),s._v("”。“外部模块”现在则简称为“模块”，模块在其自身的作用域里执行，而不是在全局作用域里；")])]),s._v("\n****         这意味着定义在一个模块里的变量，函数，类等等在模块外部是不可见的，除非你明确地使用export形式之一导出它们。 ****\n****         相反，如果想使用其它模块导出的变量，函数，类，接口等的时候，你必须要导入它们，可以使用 import形式之一。")])]),s._v(" "),a("h3",{attrs:{id:"_7-2-模块引入的几种方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-模块引入的几种方法"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.2 模块引入的几种方法")])]),s._v(" "),a("p",[a("strong",[s._v("根据导出方式，可以有对应的导入格式：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('export {a, func, Dog2}    \n// 对应导入方式：import {a, func, Dog2} from "./md1"   使用： a    func()\n\n\nexport default {a, func, Dog2}   \n// 对应导入方式：import md1 from "./md1"    使用：md1.a    md1.func()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("main.ts:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// import {a, func, Dog2} from "./md1"\n\n// console.log(a)\n\n// func()\n\n// var objDog = new Dog2()\n// objDog.eat()\n//---------------------------------------------\n// import {a as myA, func, Dog2} from "./md1"\n// console.log(myA)\n//-----------------------------------------------\n// import md1 from "./md1"\n// func()\n// console.log(md1.a)\n\n\n//-----------------------------------------------\n// import A from "./md1"\n// console.log(A.a)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("strong",[s._v("md1.ts：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function func(){\n    console.log("这是md1中的func函数")\n}\n\nclass Dog2{\n\n    eat(){\n        console.log("吃------")\n    }\n}\n\n// export {a, func, Dog2}      // 对应导入方式：import {a, func, Dog2} from "./md1"\n\n\nexport default {a, func, Dog2}   // 对应导入方式：import md1 from "./md1"    使用：md1.a,  md1.func()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"_7-3-命名空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-命名空间"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.3 命名空间")])]),s._v(" "),a("p",[a("strong",[s._v("命名空间:")]),s._v("**\n****    在代码量较大的情况下，为了避免各种变量命名相冲突，可将相似功能的函数、类、接口等放置到命名空间内****\n****    同Java的包、.Net的命名空间一样，TypeScript的命名空间可以将代码包裹起来，只对外暴露需要在外部访问的对象。命名空间内的对象通过export关键字对外暴露。**")]),s._v(" "),a("p",[a("strong",[s._v("命名空间和模块的区别：")])]),s._v(" "),a("p",[a("strong",[s._v("命名空间：内部模块，主要用于组织代码，避免命名冲突。")])]),s._v(" "),a("p",[a("strong",[s._v("模    块：ts的外部模块的简称，侧重代码的复用，一个模块里可能会有多个命名空间。")])]),s._v(" "),a("p",[a("strong",[s._v("main.ts中：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import A from "./md1"\nconsole.log(A.a)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("md2.ts中：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('export namespace A{\n    export let a = 10;\n\n    function func(){\n        console.log("这是md1中的func函数")\n    }\n\n    class Dog2{\n\n        eat(){\n            console.log("吃------")\n        }\n    }\n}\nconsole.log(A.a)  //10\n\nnamespace B{\n\n    let a = 100;\n\n    function func(){\n        console.log("这是md1中的func函数")\n    }\n\n    class Dog2{\n\n        eat(){\n            console.log("吃------")\n        }\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("h2",{attrs:{id:"八、装饰器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、装饰器"}},[s._v("#")]),s._v(" "),a("strong",[s._v("八、装饰器")])]),s._v(" "),a("p",[a("strong",[s._v("装饰器:装饰器是一种")]),s._v("**"),a("strong",[s._v("特殊类型的声明******，它能够被附加到类声明，方法，属性上，可以为原本的代码添加额外的功能。")])]),s._v(" "),a("p",[a("strong",[s._v("通俗的讲装饰器就是一个函数，可以注入到类、方法、属性参数上来扩展类、属性、方法的功能。")])]),s._v(" "),a("p",[a("strong",[s._v("常见的装饰器有：类装饰器、属性装饰器、方法装饰器")])]),s._v(" "),a("p",[a("strong",[s._v("装饰器的写法：普通装饰器（无传参） 、 装饰器工厂（可传参）")])]),s._v(" "),a("p",[a("strong",[s._v("装饰器是过去几年中js最大的成就之一。")])]),s._v(" "),a("h3",{attrs:{id:"_8-1-类装饰器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-类装饰器"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.1 类装饰器")])]),s._v(" "),a("h4",{attrs:{id:"_8-1-1-类装饰器-普通装饰器-无法传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-1-类装饰器-普通装饰器-无法传参"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.1.1 类装饰器:普通装饰器（无法传参）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function logClass(p:any){  \n    //这里的代码在开始装饰的时候就会执行了！\n    console.log(p);      // p接收这个被装饰的类\n  \n}\n\n@logClass\nclass MyClass{\n   \n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"_8-1-2-类装饰器-装饰器工厂-可传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-2-类装饰器-装饰器工厂-可传参"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.1.2 类装饰器:装饰器工厂（可传参）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function logClass(p:any){  \n    //这里的代码在开始装饰的时候就会执行了！\n    return function(target:any){\n        console.log(target)   //target是类\n        console.log(p)  // p接收装饰器参数\n    }\n}\n\n@logClass("aaa")     //向装饰器传递参数\nclass MyClass{\n   \n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"_8-2-属性装饰器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-属性装饰器"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.2 属性装饰器")])]),s._v(" "),a("p",[a("strong",[s._v("属性装饰器表达式会在运行时当作函数被调用，传入下列2个参数：")])]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("对于静态成员来说是类的构造函数，对于实例成员是类的原型对象。")])]),s._v(" "),a("li",[a("strong",[s._v("成员的名字。")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//实现一个装饰器，每次定义一个方法，都可以往数组arr中追加函数名作为数组的元素\nfunction logProperty(p:any){  \n    return function(target:any,attr:any){\n        console.log(target);  //对于静态成员来说是类的构造函数，对于实例成员是类的原型对象\n        console.log(attr);   //成员的名字\n        console.log(p);  //p接收装饰器参数\n    }\n}\n\nclass MyClass{\n    @logProperty("aaa")\n    public name:string="zhangsan";\n\n    @logProperty("bbb")\n    static gender="男"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"_8-3-方法装饰器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-方法装饰器"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.3 方法装饰器")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function logMethod(p:any){  \n    //这里的代码在开始装饰的时候就会执行了！\n    return function(target:any,methodName:any,desc:any){\n        // console.log(target)   //target对于静态成员来说是类的构造函数，对于实例成员是类的原型对象\n        // console.log(methodName);   // 被装饰的方法名\n        // console.log(desc);   // 属性描述符,它的value属性就是被装饰的这个函数\n        // console.log(p)  // p接收装饰器参数\n\n        //保存原有指向\n        let oMethod = desc.value;\n        desc.value = function(...res:any){\n\n            console.log("log: 调用了sum1这个方法");\n            oMethod(...res)\n        }\n    }\n}\n\nclass MyClass{\n\n    @logMethod("")\n    sum1(n1:number,n2:number){\n        console.log(`和是：${n1+n2}`)\n    }\n}\nlet obj = new MyClass()\nobj.sum1(10,20)   //相当于每次调用这个函数，都会执行 desc.value中的\nobj.sum1(30,40)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("h3",{attrs:{id:"_8-4-小练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-小练习"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.4 小练习")])]),s._v(" "),a("p",[a("strong",[s._v("需求：动态追加数组元素：")])]),s._v(" "),a("p",[s._v("**实现一个装饰器，每次定义一个方法，都可以往数组arr中追加函数名作为数组的元素 **")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('let arr:any[] = [];\nfunction addMethod(p:any){  \n    return function(target:any,methodName:any,desc:any){\n        arr.push(p)\n    }\n}\n\nclass MyClass{\n    @addMethod("eat")\n    eat(){\n\n    }\n\n    @addMethod("drink")\n    drink(){\n\n    }\n}\nconsole.log(arr)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"_8-5-小练习2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-小练习2"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.5 小练习2")])]),s._v(" "),a("p",[a("strong",[s._v("实现一个装饰器，在不影响原有计算功能的基础上，计算0加到10亿花了多少秒")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function logMethod(p:any){  \n    return function(target:any,methodName:any,desc:any){\n        let oMethod = desc.value;\n        desc.value = function(...res:any){\n\n            var timestamp1=new Date().getTime();\n            oMethod(...res)\n            var timestamp2=new Date().getTime();\n            let ret = (timestamp2 - timestamp1)/1000\n            console.log(ret);\n        \n        }\n    }\n}\n\nclass MyClass{\n\n    @logMethod("")\n    sum1(){\n        let n = 0;\n        for(let i =0;i<10000000000;i++){\n            n+=1\n        }\n        console.log(n);\n    }\n}\nlet obj = new MyClass()\nobj.sum1() \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);